# Read `man 5 sway` for a complete reference.
include "kanagawa"

### Variables
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $term wezterm

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel --list-executables-in-path | xargs swaymsg exec --

### Output configuration
set $internal_output eDP-1
set $external_output HDMI-A-1

output * background ~/.config/awesome/wallpapers/wallhaven-exrqrr.jpg fill
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
exec swayidle -w \
         timeout 300 'swaymsg "output $internal_output power off"' resume 'swaymsg "output $internal_output power on"' \

### Input configuration
input type:touchpad {
    accel_profile flat
    drag disabled
    dwt enabled
    dwtp enabled
    tap enabled
    natural_scroll enabled
}

input type:keyboard {
    xkb_layout "us,ru"
    xkb_options "grp:alt_shift_toggle"
}
# You can get the names of your inputs by running: swaymsg -t get_inputs

### Key bindings

## Basics
# start terminal
bindsym --to-code $mod+Return exec $term

# start application launcher
bindsym --to-code $mod+p exec $menu

# kill window
bindsym --to-code $mod+q kill

# reload the configuration file
bindsym --to-code $mod+Ctrl+r reload

# exit sway
# bindsym $mod+Ctrl+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
bindsym --to-code $mod+Ctrl+q exec "swaymsg exit"

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

## Moving around
# Move your focus around
bindsym --to-code $mod+$left  focus left
bindsym --to-code $mod+$down  focus down
bindsym --to-code $mod+$up    focus up
bindsym --to-code $mod+$right focus right

# Move the focused window around
bindsym --to-code $mod+Ctrl+$left  move left
bindsym --to-code $mod+Ctrl+$down  move down
bindsym --to-code $mod+Ctrl+$up    move up
bindsym --to-code $mod+Ctrl+$right move right

## Workspaces
workspace 1 output $internal_output
workspace 2 output $internal_output
workspace 3 output $internal_output
workspace 4 output $internal_output
workspace 5 output $internal_output
# workspace 6 output $external_output
# workspace 7 output $external_output
# workspace 8 output $external_output
# workspace 9 output $external_output
# workspace 0 output $external_output

# Switch to workspace
bindsym --to-code $mod+1 workspace number 1
bindsym --to-code $mod+2 workspace number 2
bindsym --to-code $mod+3 workspace number 3
bindsym --to-code $mod+4 workspace number 4
bindsym --to-code $mod+5 workspace number 5
# bindsym $mod+6 workspace number 6
# bindsym $mod+7 workspace number 7
# bindsym $mod+8 workspace number 8
# bindsym $mod+9 workspace number 9
# bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym --to-code $mod+Ctrl+1 move container to workspace number 1
bindsym --to-code $mod+Ctrl+2 move container to workspace number 2
bindsym --to-code $mod+Ctrl+3 move container to workspace number 3
bindsym --to-code $mod+Ctrl+4 move container to workspace number 4
bindsym --to-code $mod+Ctrl+5 move container to workspace number 5
# bindsym $mod+Ctrl+6 move container to workspace number 6
# bindsym $mod+Ctrl+7 move container to workspace number 7
# bindsym $mod+Ctrl+8 move container to workspace number 8
# bindsym $mod+Ctrl+9 move container to workspace number 9
# bindsym $mod+Ctrl+0 move container to workspace number 0

## Layouts
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
# bindsym $mod+b splith
# bindsym $mod+v splitv

# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym --to-code $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym --to-code $mod+s floating toggle

# Swap focus between the tiling area and the floating area
# bindsym $mod+space focus mode_toggle

# Move focus to the parent container
# bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
# bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
# bindsym $mod+minus scratchpad show

## Resizing containers

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Return to default mode
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

### Status Bar
# Read `man 5 sway-bar` for more information about this section.
bar {
  swaybar_command waybar
}

font "JetBrains Mono 11"

set $volume_step 1
set $brightness_step 1

bindsym XF86AudioRaiseVolume exec wpctl set-volume --limit 1.0 @DEFAULT_SINK@ $brightness_step%+
bindsym XF86AudioLowerVolume exec wpctl set-volume --limit 1.0 @DEFAULT_SINK@ $brightness_step%-
bindsym Ctrl+XF86AudioRaiseVolume exec wpctl set-volume --limit 1.0 @DEFAULT_SOURCE@ $brightness_step%+
bindsym Ctrl+XF86AudioLowerVolume exec wpctl set-volume --limit 1.0 @DEFAULT_SOURCE@ $brightness_step%-
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec wpctl set-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessUp exec xbacklight -set $(($(xbacklight -get)+$brightness_step))
bindsym XF86MonBrightnessDown exec xbacklight -set $(($(xbacklight -get)-$brightness_step))

exec dex --autostart
exec --no-startup-id dbus-update-activation-environment --all
exec_always xbacklight -set 45
